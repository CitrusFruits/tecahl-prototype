<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.hasAddedOptions = false;

//initialize all its options to 0
self.menuOptionsText = 0;
self.menuOption = 0;    //this will probably be filled with scripts or something of the like


self.optionHeight = 24;

global.canSelectUnit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//self.sourceUnit.canMove = false;
if(!self.hasAddedOptions){
    for(var i = 0; i &lt; array_length_1d(self.menuOptionsText); i++){
      //drawX, drawY
      var dX = x + global.gridSize; 
      var dY = y + i*self.optionHeight;
      var option = instance_create(dX, dY, MenuOptionObject);  
      option.text = self.menuOptionsText[i];
      
      //fill out the menu options
      self.menuOptions[i] = option;
    }
    self.hasAddedOptions = true;
}
 for(var i = 0; i &lt; array_length_1d(self.menuOptions); i++){
    if(self.menuOptions[i].exitMenu){
        //destroys all instances of MenuOptionObject    
        with (MenuOptionObject) {
             instance_destroy()
        }
        global.canSelectUnit = true;
        //can't get this to work!
    //self.sourceUnit.canMove = false;
        
        //destroys this menu
        instance_destroy();
        
        //break the loop and exit
        exit;
    }
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
